#+TITLE: Simple web application to manage reservations for Italian Dinner

* Introduction

This is a simplistic set of CGI scripts adapted for my web host and as a
learning exercise to see how much features and ease-of-use a web framework
deliver.

See also [[file+emacs:app/gestion/index.org][usage instructions and checklists (in French)]].

* Deployment

Use the ~deploy.sh~ script like this:
#+begin_src shell :exports code
  ./deploy.sh 'user@host' 'username' 'groupname' 'https://host' 'prefix_folder' 'deploy_folder' 'virtualenv_folder' ['admin_user' 'admin_pw']
#+end_src

- ~user@host~ :: anything that `ssh` accepts.
- ~username~ and ~groupname~ :: CGI scripts are only executed if they belong
  to a specific user/group that does not correspond to the user/group of the
  system where development happens.  These parameters set the user/group in
  the destination.
- ~prefix_folder/deploy_folder~ :: where to deploy (relative to the SSH host,
  not necessarily the path typed in your browser). ~prefix_folder~ is used to
  navigate on the SSH host, ~deploy_folder~ is used to navigate even deeper,
  but will also be part of the URLs of the web application.
- ~virtualenv_folder~ :: absolute path where to create the virtual environment
  with libraries
- ~admin_user~ and ~admin_pw~ :: the administrative interface should be
  protected by authentication.  If the parameters are given, HTTP basic
  authentication is setup in that folder.

Then configure the application
- upload images for the dishes to =prefix_folder/deploy_folder/gestion/=, e.g.
  + [[https://www.vecteezy.com/vector-art/3736403-spaghetti-bolognese-with-tomato-sauce][spaghetti bolognese with tomato sauce]]
    #+begin_example
      <a href="https://www.vecteezy.com/free-vector/cartoon">Cartoon Vectors by Vecteezy</a>
    #+end_example
  + [[https://www.vecteezy.com/vector-art/965991-spaghetti-meal-set][spaghetti meal set]]
    #+begin_example
      <a href="https://www.vecteezy.com/free-vector/cartoon">Cartoon Vectors by Vecteezy</a>
    #+end_example
  + [[https://www.vecteezy.com/search?qterm=croquette-cheese&content_type=vector][cheese croquette]]
    #+begin_example
      <a href="https://www.vecteezy.com/free-vector/croquette">Croquette Vectors by Vecteezy</a>
    #+end_example
  + [[https://www.vecteezy.com/vector-art/3820058-delicious-traditional-kimchi][carpaccio]]
    #+begin_example
      <a href="https://www.vecteezy.com/vector-art/3820058-delicious-traditional-kimchi">Delicious traditional kimchi by Vecteezy</a>
    #+end_example
  + [[https://www.vecteezy.com/vector-art/10456729-vector-contour-drawing-of-mozzarella-cheese-slices-on-a-white-background][mozzarella cheese]]
    #+begin_example
      <a href="https://www.vecteezy.com/free-vector/black">Black Vectors by Vecteezy</a>
    #+end_example
  + [[https://www.vecteezy.com/vector-art/150043-free-sweet-food-line-icon-vector][sweet food]]
    #+begin_example
      <a href="https://www.vecteezy.com/free-vector/vector">Vector Vectors by Vecteezy</a>
    #+end_example
- edit =prefix_folder/deploy_folder/configuration.json= on your webserver (cf
  [[file+emacs:app/config.py][app/config.py]]).
- Put up the dynamic or static input form

** Static input form
Host an HTML form that will =POST= its content to the =post_reservation.cgi=
script, cf [[file:new-input-form.html][new-input-form.html]].

* Test mode
There are 3 dates for the dinner: 2 fake dates in 2099 and the real date
in 2024.

The trick to be able to book dates for the fake dates is that the name must
start with ~Test~ and that the email address must end with ~@example.com~.

There are some automated tests in [[file+emacs:tests/tests.sh][this shell script]].  It exercises various
end-points and compares the HTML output with known good HTML output.  The
tests are unfortunately not real unit tests: they have to be run in sequence
as the state of one test is often assumed in the next test.

* Limitations
- No maximum number of seats per concert enforced.
- Minimal validation on name and email: we count on the fact that few people
  will find the form and that we will weed out fake registrations by seeing
  who pays.
